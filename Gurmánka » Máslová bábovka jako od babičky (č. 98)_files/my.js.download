jQuery(document).ready(function() {

	jQuery(".ngg-galleryoverview .ngg-gallery-thumbnail > span")
		.wrapInner('<div style="float:left;"><div>')
		.append('<div style="float:right;  width:16px; height:16px; margin:3px 5px 0 0; background:url(http://www.gurmanka.cz/wp-content/themes/gurmanka/img/cart_put.png) no-repeat; cursor:pointer;" class="cart" title="Vloží fotku do Seznamu fotografií (níže)"></div>');

	jQuery(".ngg-galleryoverview .cart").click(function() {
		var ta = jQuery('textarea[name="seznam"]');
		var add = jQuery(this).parents('span').text().replace(/\n/, " ", "m").replace(/\t+/, " ").replace(/  /, " ");
		var old = ta.val();

		if (old != '') old = old + "\n";
		ta.val(old + add);
		remember();
	});


	// fb = fotobanka
	if (jQuery('textarea.to-remember').size() > 0) {

		var fb_orderlist; // string, cookie content
		var fb_orderlist_el = jQuery('textarea.to-remember'); // element
		var fb_orderlist_cookie_name = 'orderlist'; // string
	
		fb_orderlist_el.text(Base64.decode(jQuery.cookie(fb_orderlist_cookie_name)));
	
		fb_orderlist_el.keypress(function(){
			remember();
		});
		
		function remember () {
			jQuery.cookie(
				fb_orderlist_cookie_name, 
				Base64.encode(fb_orderlist_el.val()),
				{path:'/', expires:365});
		}
		
	}

});


function removeSomeAcc(str) {
	var str2 = ''; 
	
	var sdiak="áäčďéěíĺľňóôőöŕšťúůűüýřžÁÄČĎÉĚÍĹĽŇÓÔŐÖŔŠŤÚŮŰÜÝŘŽ";
	var bdiak="aacdeeillnoooorstuuuuyrzAACDEEILLNOOOORSTUUUUYRZ";

	for (p=0; p < str.length; p++) {
		if (sdiak.indexOf(str.charAt(p))!=-1)
			str2 += bdiak.charAt(sdiak.indexOf(str.charAt(p)));
		else 
			str2 += str.charAt(p);
	}
	
	return str2;

}

/**
*
*  Base64 encode / decode
*  http://www.webtoolkit.info/
*
**/

var Base64 = {

    // private property
    _keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",

    // public method for encoding
    encode : function (input) {
        var output = "";
        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
        var i = 0;

        input = Base64._utf8_encode(input);

        while (i < input.length) {

            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);

            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;

            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            } else if (isNaN(chr3)) {
                enc4 = 64;
            }

            output = output +
            this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +
            this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);

        }

        return output;
    },

    // public method for decoding
    decode : function (input) {
        var output = "";
        var chr1, chr2, chr3;
        var enc1, enc2, enc3, enc4;
        var i = 0;

        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

        while (i < input.length) {

            enc1 = this._keyStr.indexOf(input.charAt(i++));
            enc2 = this._keyStr.indexOf(input.charAt(i++));
            enc3 = this._keyStr.indexOf(input.charAt(i++));
            enc4 = this._keyStr.indexOf(input.charAt(i++));

            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;

            output = output + String.fromCharCode(chr1);

            if (enc3 != 64) {
                output = output + String.fromCharCode(chr2);
            }
            if (enc4 != 64) {
                output = output + String.fromCharCode(chr3);
            }

        }

        output = Base64._utf8_decode(output);

        return output;

    },

    // private method for UTF-8 encoding
    _utf8_encode : function (string) {
        string = string.replace(/\r\n/g,"\n");
        var utftext = "";

        for (var n = 0; n < string.length; n++) {

            var c = string.charCodeAt(n);

            if (c < 128) {
                utftext += String.fromCharCode(c);
            }
            else if((c > 127) && (c < 2048)) {
                utftext += String.fromCharCode((c >> 6) | 192);
                utftext += String.fromCharCode((c & 63) | 128);
            }
            else {
                utftext += String.fromCharCode((c >> 12) | 224);
                utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                utftext += String.fromCharCode((c & 63) | 128);
            }

        }

        return utftext;
    },

    // private method for UTF-8 decoding
    _utf8_decode : function (utftext) {
        var string = "";
        var i = 0;
        var c = c1 = c2 = 0;

        while ( i < utftext.length ) {

            c = utftext.charCodeAt(i);

            if (c < 128) {
                string += String.fromCharCode(c);
                i++;
            }
            else if((c > 191) && (c < 224)) {
                c2 = utftext.charCodeAt(i+1);
                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            }
            else {
                c2 = utftext.charCodeAt(i+1);
                c3 = utftext.charCodeAt(i+2);
                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            }

        }

        return string;
    }

}